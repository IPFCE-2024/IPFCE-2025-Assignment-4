name: Autograding Tests
on:
  push:
  workflow_dispatch:
  repository_dispatch:
permissions:
  checks: write
  actions: read
  contents: read

jobs:
  test-exercises:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    strategy:
      fail-fast: false  # Don't stop on first failure
      matrix:
        exercise: [2, 4, 5, 6, 7, 8]
        include:
          - exercise: 2
            name: "Get Min Function"
          - exercise: 4
            name: "Reverse Array Function"  
          - exercise: 5
            name: "Longest Sequence Function"
          - exercise: 6
            name: "Count Array Function"
          - exercise: 7
            name: "Average Function"
          - exercise: 8
            name: "Average Function (Alternative)"
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Compile Exercise ${{ matrix.exercise }}
      id: compile
      continue-on-error: true
      run: |
        echo "Compiling Exercise ${{ matrix.exercise }}: ${{ matrix.name }}"
        gcc -o tests/test_exercise${{ matrix.exercise }} \
          tests/test_exercise${{ matrix.exercise }}.c \
          exercise${{ matrix.exercise }}.c
        echo "compile_success=$?" >> $GITHUB_OUTPUT
      
    - name: Run Exercise ${{ matrix.exercise }} Test
      id: test
      continue-on-error: true
      if: steps.compile.outputs.compile_success == '0'
      run: |
        echo "Running Exercise ${{ matrix.exercise }} test..."
        ./tests/test_exercise${{ matrix.exercise }} > test_output_exercise${{ matrix.exercise }}.txt 2>&1
        exit_code=$?
        echo "test_success=$exit_code" >> $GITHUB_OUTPUT
        if [ $exit_code -eq 0 ]; then
          echo "✅ Exercise ${{ matrix.exercise }} tests passed"
        else
          echo "❌ Exercise ${{ matrix.exercise }} tests failed"
          echo "Test output:"
          cat test_output_exercise${{ matrix.exercise }}.txt
        fi
      
    - name: Verify Exercise ${{ matrix.exercise }} Results
      uses: classroom-resources/autograding-io-grader@v1
      continue-on-error: true
      id: grader
      if: steps.test.outputs.test_success == '0'
      with:
        test-name: Exercise ${{ matrix.exercise }} ${{ matrix.name }}
        command: echo "Exercise ${{ matrix.exercise }} tests passed"
        expected-output: Exercise ${{ matrix.exercise }} tests passed
        comparison-method: contains
        timeout: 10

  report-results:
    runs-on: ubuntu-latest
    needs: test-exercises
    if: always()  # Run even if some tests failed
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Generate Summary Report
      run: |
        echo "## 📊 Assignment 4 Autograding Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Exercise | Status | Description |" >> $GITHUB_STEP_SUMMARY
        echo "|----------|--------|-------------|" >> $GITHUB_STEP_SUMMARY
        echo "| 2 | ${{ needs.test-exercises.result }} | Get Min Function |" >> $GITHUB_STEP_SUMMARY
        echo "| 4 | ${{ needs.test-exercises.result }} | Reverse Array Function |" >> $GITHUB_STEP_SUMMARY
        echo "| 5 | ${{ needs.test-exercises.result }} | Longest Sequence Function |" >> $GITHUB_STEP_SUMMARY
        echo "| 6 | ${{ needs.test-exercises.result }} | Count Array Function |" >> $GITHUB_STEP_SUMMARY
        echo "| 7 | ${{ needs.test-exercises.result }} | Average Function |" >> $GITHUB_STEP_SUMMARY
        echo "| 8 | ${{ needs.test-exercises.result }} | Average Function (Alternative) |" >> $GITHUB_STEP_SUMMARY